给定一个包含 0, 1, 2, ..., n 中 n 个数的序列，找出 0 .. n 中没有出现在序列中的那个数。

 

示例 1:

输入: [3,0,1]
输出: 2
示例 2:

输入: [9,6,4,2,3,5,7,0,1]
输出: 8
 
说明:
你的算法应具有线性时间复杂度。你能否仅使用额外常数空间来实现?


#Java 1----暴力----- 排序方法 通过排序判断数组中元素是否连续
class Solution {
    public int missingNumber(int[] nums) {
            Arrays.sort(nums);     
           if(nums[0]!=0){
                return 0;
            }
            if(nums[nums.length-1]!=nums.length){
                return nums.length;
            }
            for(int i=1;i<nums.length;i++){
                if((nums[i-1])!=nums[i]-1){
                    return nums[i]-1;
                }
            }
            return -1;            
        }
}


#Java 2----哈希表-----思路 先将数组中每个数字插入到哈希表中，在通过判断0-n个数字是否在该哈希表中。
class Solution{
         Set<Integer> numSet  = new HashSet<Integer>();
         for(int num:nums){
            numSet.add(num);
         }
        
         for(int i=0;i<nums.length+1;i++）{
         if(!numSet.contains(i)){
         return i;
         }
         
         return -1;
}


}

